REQUIRED SOFTWARE
=================

Calculations:
- Matlab or Octave: https://www.gnu.org/software/octave/index
- Slepian software package: https://github.com/Slepian/Slepian

Plotting:
GMT 6: https://www.generic-mapping-tools.org/


FIRST TIME SETUP
================

Edit initialize.m to set the directory where you installed the Slepian software package


BASICS
======

After starting Matlab/Octave, run

initialize

To learn how to use the various functions, have a look at getUncertainty.m
That script incorporates all aspects to get many inversion results for a choice of parameters (Lmax, coefficients) and for random data subselection.

For example:
cfmat=getUncertainty([],[],2,'Lmax2_allcoef',[],[],[],0.5,10);
Make sure that you have a folder named "coefs" in your directory such that the result can be saved.


To play around with different parameter choices, try out
tryDifferentLtwo.m
and
tryDifferentEig.m

For example:
coefs=tryDifferentLtwo(6,-37.25);

The script "writeAvgField" then writes out the average result from these calculations:
writeAvgField(2,'Lmax2_allcoef',[]);




REPRODUCTION OF PAPER FIGURES AND TABLES
========================================

Table 1
-------

Use JupBgTable.m for example: JupBgTable(1) for the values of G1 or JupBgTable(101) for the values of the Juno flyby


Figure 2
--------

Prepare data with

showMoreData()

Then plot in GMT using (from the command line)

./showMoreData.sh


Figure 3
--------

showCorr.m: Calculate and write out correlation matrix
To greate the corresponding figure, run

./plotCorrelation.sh CorrMat_Lmax2_weighting_true


Table 2
-------
For each inversion parameter selection, run getUncertainty.m, for example:
cfmat = getUncertainty([],[],1,'Lmax1',[],[],[],0.5,100);

The coefficients cfmat will be stored in coefs/Lmax1_manycoefs.mat

The Uniform field is the last ntracks*3 entries of cfmat:
/BU = cfmat(end-3*7+1:end,:);
mean(BU,2)
std(BU,[],2)

You can get the rms values for each track using getRMS.m

Specifically, I ran:

cfmat = getUncertainty([],[],1,'Lmax1',[],[],[],0.5,100,false,false);

cfmat = getUncertainty([],[],2,'Lmax2',[],[],[],0.5,100,false,false);

cfmat = getUncertainty(6,-73.3,2,'Lmax2_B_i6_v-37p3',[],[],[],0.5,100,false,false);

cfmat = getUncertainty(7,23.8,2,'Lmax2_C_i7_v23p8',[],[],[],0.5,100,false,false);  

cfmat = getUncertainty(24,[],2,'Lmax2-svd-SV24',[],[],[],0.5,100,false,false);

Table 3
-------

Use the output cfmat of getUncertainty (or load it from the coefs folder). 

The coefficients are stored in a normalization different from the Schmidt normalization used by the mag community. To get the correct normalization, use the provided Schmidt renormalization:

[coef,lmcosi] = SchmidtCoef(mean(cfmat,2),1);

[stdcoef,stdlmcosi] = SchmidtSTD(cfmat,1);

The lmcosi matrix has four columns: l, m, cos, sin.
The last two columns contain the Schmidt coefficients for cos and sin parts of the spherical harmonic expansion.
lmcosi(2:end,3:4)'  makes it easier to enter the right values into the latex table





writeAvgField(1,'Lmax1_manycoefs',[]);










THESE ARE OLDER INSTRUCTIONS. Some of the functions changed and may be outdated

Instructions:
-------------

Calculations:

In Matlab or Octave, initialize the Slepian software:

initialize

Make sure that you set the path in initialize to the correct path of your Slepian codes, or just copy all the codes into your Slepian folder.
Then run makeMyField(g10,Lmax,filename), for example

makeMyField(-700,3,'Lmax_3_g10_-700_allGalileoTracks')
or
makeMyField(-700,3,'Lmax3_g10_-700_JunoAndAllGalileo')

Plotting:

In the command line, run ./makeMyFigs.sh filename for example:

./makeMyFigs.sh Lmax_3_g10_-700_allGalileoTracks 1119.86
or
./makeMyFigsJuno.sh Lmax3_g10_-700_JunoAndAllGalileo 1115.88

For the plotting you need to have GMT 6 installed.

The figures are saved in the "figures" folder


